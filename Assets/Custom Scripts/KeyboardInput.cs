//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Input/KeyboardInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @KeyboardInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @KeyboardInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""KeyboardInput"",
    ""maps"": [
        {
            ""name"": ""Default"",
            ""id"": ""1e5957d3-d710-465f-9966-acf14217a3aa"",
            ""actions"": [
                {
                    ""name"": ""AtoB"",
                    ""type"": ""Button"",
                    ""id"": ""693c69db-de9d-41de-b6aa-88759e3c7033"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AtoC"",
                    ""type"": ""Button"",
                    ""id"": ""9f5311fa-4699-4423-882b-59bb7d9e5fa8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BtoA"",
                    ""type"": ""Button"",
                    ""id"": ""871a0629-4b99-48b2-b647-2213d18282f9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BtoC"",
                    ""type"": ""Button"",
                    ""id"": ""1817a4df-2756-4f6d-aa9b-1704ab8eaad5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CtoA"",
                    ""type"": ""Button"",
                    ""id"": ""5b5f479b-ff42-41d2-a83c-f2c2d749ffa1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CtoB"",
                    ""type"": ""Button"",
                    ""id"": ""f4af0945-7cf8-4125-9a63-676c386b4434"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""829fbcf7-fa52-4b2f-b3b7-56a3857f5c41"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AtoB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""59a61521-3c5f-43a5-abc6-047afdf9111e"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AtoC"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a16e2274-87db-4b70-8997-66c4917c4079"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BtoA"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ceec9e95-99c1-4f19-badb-dd299660660a"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BtoC"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c13c7a5b-d72a-4652-b571-8003f0733d89"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CtoA"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c5ad4ab6-58b1-469f-8b81-ee92752b0d73"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CtoB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Default
        m_Default = asset.FindActionMap("Default", throwIfNotFound: true);
        m_Default_AtoB = m_Default.FindAction("AtoB", throwIfNotFound: true);
        m_Default_AtoC = m_Default.FindAction("AtoC", throwIfNotFound: true);
        m_Default_BtoA = m_Default.FindAction("BtoA", throwIfNotFound: true);
        m_Default_BtoC = m_Default.FindAction("BtoC", throwIfNotFound: true);
        m_Default_CtoA = m_Default.FindAction("CtoA", throwIfNotFound: true);
        m_Default_CtoB = m_Default.FindAction("CtoB", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Default
    private readonly InputActionMap m_Default;
    private List<IDefaultActions> m_DefaultActionsCallbackInterfaces = new List<IDefaultActions>();
    private readonly InputAction m_Default_AtoB;
    private readonly InputAction m_Default_AtoC;
    private readonly InputAction m_Default_BtoA;
    private readonly InputAction m_Default_BtoC;
    private readonly InputAction m_Default_CtoA;
    private readonly InputAction m_Default_CtoB;
    public struct DefaultActions
    {
        private @KeyboardInput m_Wrapper;
        public DefaultActions(@KeyboardInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @AtoB => m_Wrapper.m_Default_AtoB;
        public InputAction @AtoC => m_Wrapper.m_Default_AtoC;
        public InputAction @BtoA => m_Wrapper.m_Default_BtoA;
        public InputAction @BtoC => m_Wrapper.m_Default_BtoC;
        public InputAction @CtoA => m_Wrapper.m_Default_CtoA;
        public InputAction @CtoB => m_Wrapper.m_Default_CtoB;
        public InputActionMap Get() { return m_Wrapper.m_Default; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DefaultActions set) { return set.Get(); }
        public void AddCallbacks(IDefaultActions instance)
        {
            if (instance == null || m_Wrapper.m_DefaultActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_DefaultActionsCallbackInterfaces.Add(instance);
            @AtoB.started += instance.OnAtoB;
            @AtoB.performed += instance.OnAtoB;
            @AtoB.canceled += instance.OnAtoB;
            @AtoC.started += instance.OnAtoC;
            @AtoC.performed += instance.OnAtoC;
            @AtoC.canceled += instance.OnAtoC;
            @BtoA.started += instance.OnBtoA;
            @BtoA.performed += instance.OnBtoA;
            @BtoA.canceled += instance.OnBtoA;
            @BtoC.started += instance.OnBtoC;
            @BtoC.performed += instance.OnBtoC;
            @BtoC.canceled += instance.OnBtoC;
            @CtoA.started += instance.OnCtoA;
            @CtoA.performed += instance.OnCtoA;
            @CtoA.canceled += instance.OnCtoA;
            @CtoB.started += instance.OnCtoB;
            @CtoB.performed += instance.OnCtoB;
            @CtoB.canceled += instance.OnCtoB;
        }

        private void UnregisterCallbacks(IDefaultActions instance)
        {
            @AtoB.started -= instance.OnAtoB;
            @AtoB.performed -= instance.OnAtoB;
            @AtoB.canceled -= instance.OnAtoB;
            @AtoC.started -= instance.OnAtoC;
            @AtoC.performed -= instance.OnAtoC;
            @AtoC.canceled -= instance.OnAtoC;
            @BtoA.started -= instance.OnBtoA;
            @BtoA.performed -= instance.OnBtoA;
            @BtoA.canceled -= instance.OnBtoA;
            @BtoC.started -= instance.OnBtoC;
            @BtoC.performed -= instance.OnBtoC;
            @BtoC.canceled -= instance.OnBtoC;
            @CtoA.started -= instance.OnCtoA;
            @CtoA.performed -= instance.OnCtoA;
            @CtoA.canceled -= instance.OnCtoA;
            @CtoB.started -= instance.OnCtoB;
            @CtoB.performed -= instance.OnCtoB;
            @CtoB.canceled -= instance.OnCtoB;
        }

        public void RemoveCallbacks(IDefaultActions instance)
        {
            if (m_Wrapper.m_DefaultActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IDefaultActions instance)
        {
            foreach (var item in m_Wrapper.m_DefaultActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_DefaultActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public DefaultActions @Default => new DefaultActions(this);
    public interface IDefaultActions
    {
        void OnAtoB(InputAction.CallbackContext context);
        void OnAtoC(InputAction.CallbackContext context);
        void OnBtoA(InputAction.CallbackContext context);
        void OnBtoC(InputAction.CallbackContext context);
        void OnCtoA(InputAction.CallbackContext context);
        void OnCtoB(InputAction.CallbackContext context);
    }
}
